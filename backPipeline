pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                // Pull from repo
                git branch:'main', url: 'git@github.com:MateoCetti/ing-soft-3-tif-back.git'
                
                // Install dependencies (build for express)
                sh 'npm ci'

            }
        }
        stage('unit-tests') {
            environment{
                MONGO_URI = 'mongodb://mongo:oLBAFct40fU3bUFwVd54@containers-us-west-124.railway.app:6497'
                DATABASE = 'pokemon_db'
                COLLECTION = 'pokemon_collection'
            }
            steps{
                // Run unit tests
                sh 'npm run test:coverage'
            }
            post {
                always{   
                    junit '**/junit.xml'
                    publishHTML target: [
                        allowMissing         : false,
                        alwaysLinkToLastBuild: false,
                        keepAll             : true,
                        reportDir            : 'coverage/lcov-report',
                        reportFiles          : 'index.html',
                        reportName           : 'Test Report'
                  ]
                }
            }
        }
        stage('Docker upload'){
            environment {
                DOCKER_CREDS = credentials('bae6860c-23b8-4a63-a7e2-043ce862c8a5')
            }
            steps{
                // login to dockerhub with user credentials
                sh 'docker login -u $DOCKER_CREDS_USR -p $DOCKER_CREDS_PSW'
                
                // build docker image with project Dockerfile
                sh 'docker build -t "tif-back" .'
                
                // Add a tag to the builded image
                sh 'docker tag tif-back matesape/tif-back:latest'

                // Push tagged image to dockerhub
                sh 'docker push matesape/tif-back:latest'
            }
        }       
        stage('Deployment') {
            steps {
                // Link railway local project with remote one
                sh 'railway link 611ad00f-90b1-4c21-bb7f-78982111c685'
                
                // Build dockerfile and push it to railway.app
                sh 'railway up -s tif_back'
            }
        }
        stage('Integration-tests') {
            environment {
                FRONT_URL = 'https://tif-front-production.up.railway.app/'
            }
            steps {
                // Pull from repo
                git branch:'main', url: 'git@github.com:MateoCetti/ing-soft-3-tif-integration-tests.git'

                 // Install dependencies
                sh 'npm ci'

                // Wait for production environment to apply changes
                sleep(time:15,unit:"SECONDS")

                // Build project locally
                sh 'npm run test'
            }
            post {
                always {
                    junit '**/test-results.xml'
                }
            }
        }        
    }
}
